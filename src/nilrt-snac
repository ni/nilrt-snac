#!/bin/bash
# SPDX-License-Identifier: MIT
set -euo pipefail


## CONSTANTS
SCRIPT_ROOT=$(realpath $(dirname ${BASH_SOURCE}))

## IMPORTS
source "${SCRIPT_ROOT}/../lib/nilrt-snac/util.sh"

## FUNCTIONS
print_version() {
	cat <<-EOF
	nilrt-snac 0.1
	Copyright (C) 2024 NI (Emerson Electric)
	License MIT: MIT License <https://spdx.org/licenses/MIT.html>
	This is free software: you are free to change and redistribute it.
	There is NO WARRANTY, to the extent permitted by law.
	EOF
}


## CLI PARSING
usage() {
	cat <<EOF
$(basename ${BASH_SOURCE}) [--help] [--version] [--yes] <config>

NI LinuxRT Secured, Network-Attached Controller utility.

# Options
-h, --help
	Print this usage information and exit.
-V, --version
	Print this script's version information and exit.
-y, --yes
	Skip user prompts (answer 'yes' to all prompts).

# Commands
config, configure  Affect the SNAC configuration on this machine.

# Returns
$EX_OK    when the operation was successful.
$EX_ERROR    when an unexpected error occurred.
$EX_USAGE    when given invalid arguments.
$EX_BAD_ENVIRONEMNT  when the execution environment is invalid.
$EX_CHECK_FAILURE  when a configuration check fails.
EOF
}


positionals=()
yes=false

while [ $# -ge 1 ]; do case "$1" in
	-h|--help)
		usage
		exit 0
		;;
	-V|--version)
		print_version
		exit 0
		;;
	-y|--yes)
		yes=true
		shift
		;;
	-*|--*)
		log ERROR "Invalid or unknown option \"$1\"."
		exit 2
		;;
	*)
		positionals+=($1)
		shift
		;;
esac; done

# If no comand is given, print usage and exit 2.
if [ ${#positionals[@]} -lt 1 ]; then\
	log ERROR "Missing required positional arguments.";
	usage
	exit 2
fi
command=${positionals[0]}


# Configure the system for SNAC
# returns: The return code from configure-nilrt-snac; or 0, when the user does not give final consent.
cmd_configure() {
	echo WARNING '!! THIS TOOL IS IN-DEVELOPMENT AND APPROPRIATE ONLY FOR DEVELOPER TESTING !!'
	echo WARNING '!! Running this tool will irreversibly alter the state of your system.    !!'
	echo WARNING '!! If you are accessing your system using WiFi, you will lose connection. !!'
	
	# prompt for consent
	local consent=false
	if $yes; then
		consent=y
	else
		read -p "Do you want to continue with SNAC configuration? [y/N] " consent
	fi

	case "$consent" in
		[yY]*)
			bash "${SCRIPT_ROOT}/../lib/nilrt-snac/configure-nilrt-snac"

			echo ""  # Blank line
			echo "!! A reboot is now required to affect your system configuration. !!"
			echo "!! Login with user 'root' and no password.                       !!"

			return $?
			;;
		*)
			return 0
			;;
	esac
}

case "$command" in
	config|configure)
		cmd_configure
		exit $?
		;;
	*)
		log ERROR Unrecognized command \"${command}\"
		exit $EX_USAGE
		;;
esac
